version: "3.8"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.web
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    entrypoint: >
      bash -lc "
        # Run migrations / init script only if needed
        python manage.py migrate --no-input &&
        # If you have custom seeding logic:
        [[ -z $(psql -tAc \"SELECT 1 FROM pg_database WHERE datname='xcitri';\") ]] \
          && cd setup && ./setup_new_database.ssh Xcitri_inputs.setupPath || echo 'DB exists' &&
        # Finally start the server
        python manage.py runserver 0.0.0.0:8000 --settings Mgt.settings_template
      "

volumes:
  postgres_data: